stages:
  - lint
#   - test
#   - inspect
  - verify
  - build

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

ktlint:
  stage: lint
  only:
    - main
    - merge_requests
  image: gradle:8.1-jdk11
  script:
    - ./gradlew ktlintCheck

# test:
#   stage: test
#   only:
#     - main
#     - merge_requests
#   image: gradle:8.1-jdk11
#   script:
#     - ./gradlew test

# qodana:
#   stage: inspect
#   only:
#     - main
#     - merge_requests
#   image:
#     name: jetbrains/qodana-jvm-community:2024.1
#     entrypoint: [""]
#   cache:
#     - key: qodana-2024.1-$CI_DEFAULT_BRANCH-$CI_COMMIT_REF_SLUG
#       fallback_keys:
#         - qodana-2024.1-$CI_DEFAULT_BRANCH-
#         - qodana-2024.1-
#       paths:
#         - .qodana/cache
#   script:
#     - qodana --results-dir=$CI_PROJECT_DIR/.qodana/results
#       --cache-dir=$CI_PROJECT_DIR/.qodana/cache
#   artifacts:
#     reports:
#       codequality: .qodana/results/gl-code-quality-report.json

plugin-verifier:
  stage: verify
  only:
    - main
  image: gradle:8.1-jdk11
  cache:
    - key: plugin-verifier-$CI_DEFAULT_BRANCH-$CI_COMMIT_REF_SLUG
      fallback_keys:
        - plugin-verifier-$CI_DEFAULT_BRANCH-
        - plugin-verifier-
      paths:
        - .pluginVerifier/ides
  script:
    - ./gradlew runPluginVerifier

pre-build:
  stage: build
  only:
    - main
  image: gradle:8.1-jdk11
  script:
    - export PLUGIN_NAME=$(cat gradle.properties | grep 'pluginName = .*' | awk -F '= ' '{print $2}')
    - export PLUGIN_VERSION=$(cat gradle.properties | grep 'pluginVersion = .*' | awk -F '= ' '{print $2}')
    - export ARTIFACT_FOLDER="${PLUGIN_NAME}-${PLUGIN_VERSION}"
    - echo $ARTIFACT_FOLDER
    - echo "PLUGIN_NAME=${PLUGIN_NAME}" >> build.dotenv
    - echo "PLUGIN_VERSION=${PLUGIN_VERSION}" >> build.dotenv
    - echo "ARTIFACT_FOLDER=${ARTIFACT_FOLDER}" >> build.dotenv
  artifacts:
    reports:
      dotenv: build.dotenv

build-plugin:
  stage: build
  only:
    - main
  image: gradle:8.1-jdk11
  needs:
    - pre-build
  script:
    - ./gradlew buildPlugin
    - unzip "build/distributions/${ARTIFACT_FOLDER}.zip" -d content
    - mv content/* ./
  artifacts:
    name: "$ARTIFACT_FOLDER"
    paths:
      - $PLUGIN_NAME
    expire_in: never
